<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JMThread</name>
    </assembly>
    <members>
        <member name="T:JM.ThreadCompl.JMThreadManager">
            <summary>
            线程管理
            </summary>
        </member>
        <member name="P:JM.ThreadCompl.JMThreadManager.Instance">
            <summary>
            实例
            </summary>
        </member>
        <member name="F:JM.ThreadCompl.JMThreadManager._initDone">
            <summary>
            初始化完成标识
            </summary>
        </member>
        <member name="F:JM.ThreadCompl.JMThreadManager._threadPool">
            <summary>
            线程池
            </summary>
        </member>
        <member name="E:JM.ThreadCompl.JMThreadManager.OnExceptionEvent">
            <summary>
            线程模块异常事件 arg:异常描述
            </summary>
        </member>
        <member name="E:JM.ThreadCompl.JMThreadManager.OnInitSuccessEvent">
            <summary>
            线程模块初始化成功事件
            </summary>
        </member>
        <member name="M:JM.ThreadCompl.JMThreadManager.Initialize(System.Int32)">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:JM.ThreadCompl.JMThreadManager.RunThread(System.Action,System.Action)">
            <summary>
            运行线程
            </summary>
            <param name="threadAct">线程方法</param>
            <param name="onThreadCompletedCallback">线程完成回调</param>
            <returns>线程唯一标识Id</returns>
        </member>
        <member name="M:JM.ThreadCompl.JMThreadManager.GetThreadStatus(System.String)">
            <summary>
            获取线程状态
            </summary>
        </member>
        <member name="M:JM.ThreadCompl.JMThreadManager.AbortThread(System.String)">
            <summary>
            强制结束线程
            </summary>
        </member>
        <member name="M:JM.ThreadCompl.JMThreadManager.DoRelease">
            <summary>
            注销
            </summary>
        </member>
        <member name="T:JM.ThreadCompl.ThreadStatus">
            <summary>
            线程状态
            </summary>
        </member>
        <member name="F:JM.ThreadCompl.ThreadStatus.Wait">
            <summary>
            等待
            </summary>
        </member>
        <member name="F:JM.ThreadCompl.ThreadStatus.Run">
            <summary>
            运行
            </summary>
        </member>
        <member name="F:JM.ThreadCompl.ThreadStatus.DoneOrNotExists">
            <summary>
            结束或者不存在
            </summary>
        </member>
        <member name="F:JM.ThreadCompl.JMThreadPool._maxCount">
            <summary>
            最大运行线程数
            </summary>
        </member>
        <member name="F:JM.ThreadCompl.JMThreadPool._runList">
            <summary>
            运行线程列表
            </summary>
        </member>
        <member name="F:JM.ThreadCompl.JMThreadPool._waitList">
            <summary>
            等待线程列表
            </summary>
        </member>
        <member name="F:JM.ThreadCompl.JMThreadPool._runListLocker">
            <summary>
            运行线程列表锁
            </summary>
        </member>
        <member name="F:JM.ThreadCompl.JMThreadPool._waitListLocker">
            <summary>
            等待线程列表锁
            </summary>
        </member>
        <member name="M:JM.ThreadCompl.JMThreadPool.CreateThread(System.Action,System.Action,System.Action{System.String})">
            <summary>
            创建线程
            </summary>
        </member>
        <member name="M:JM.ThreadCompl.JMThreadPool.GetThreadStatus(System.String)">
            <summary>
            获取线程状态
            </summary>
        </member>
        <member name="M:JM.ThreadCompl.JMThreadPool.DestroyThread(System.String,System.Action{System.String})">
            <summary>
            销毁线程
            </summary>
        </member>
        <member name="M:JM.ThreadCompl.JMThreadPool.Destroy">
            <summary>
            销毁
            </summary>
        </member>
        <member name="M:JM.ThreadCompl.JMThreadPool.OnRunThreadCompleted">
            <summary>
            线程运行结束处理
            </summary>
        </member>
        <member name="M:JM.ThreadCompl.JMThreadPool.RunWaitThread">
            <summary>
            运行等待线程
            </summary>
        </member>
        <member name="M:JM.ThreadCompl.JMThreadPool.GetRunThreadById(System.String)">
            <summary>
            通过线程唯一标识Id获取运行线程实例
            </summary>
            <param name="threadId"></param>
            <returns></returns>
        </member>
        <member name="M:JM.ThreadCompl.JMThreadPool.GetWaitThreadById(System.String)">
            <summary>
            通过线程唯一标识Id获取等待线程实例
            </summary>
        </member>
        <member name="M:JM.ThreadCompl.JMThreadPool.GetThreadById(System.String)">
            <summary>
            通过线程唯一标识Id获取线程实例
            </summary>
        </member>
    </members>
</doc>
